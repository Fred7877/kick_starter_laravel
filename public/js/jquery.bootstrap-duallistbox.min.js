/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/jquery.bootstrap-duallistbox.min.js":
/*!**********************************************************!*\
  !*** ./resources/js/jquery.bootstrap-duallistbox.min.js ***!
  \**********************************************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n *  Bootstrap Duallistbox - v3.0.9\n *  A responsive dual listbox widget optimized for Twitter Bootstrap. It works on all modern browsers and on touch devices.\n *  https://www.virtuosoft.eu/code/bootstrap-duallistbox/\n *\n *  Made by István Ujj-Mészáros\n *  Under Apache License v2.0 License\n */\n!function (a, e) {\n  var s = \"bootstrapDualListbox\",\n      n = {\n    bootstrap2Compatible: !1,\n    filterTextClear: \"show all\",\n    filterPlaceHolder: \"Filter\",\n    moveSelectedLabel: \"Move selected\",\n    moveAllLabel: \"Move all\",\n    removeSelectedLabel: \"Remove selected\",\n    removeAllLabel: \"Remove all\",\n    moveOnSelect: !0,\n    moveOnDoubleClick: !0,\n    preserveSelectionOnMove: !1,\n    selectedListLabel: !1,\n    nonSelectedListLabel: !1,\n    helperSelectNamePostfix: \"_helper\",\n    selectorMinimalHeight: 100,\n    showFilterInputs: !0,\n    nonSelectedFilter: \"\",\n    selectedFilter: \"\",\n    infoText: \"Showing all {0}\",\n    infoTextFiltered: '<span class=\"label label-warning\">Filtered</span> {0} from {1}',\n    infoTextEmpty: \"Empty list\",\n    filterOnValues: !1,\n    sortByInputOrder: !1,\n    eventMoveOverride: !1,\n    eventMoveAllOverride: !1,\n    eventRemoveOverride: !1,\n    eventRemoveAllOverride: !1\n  },\n      i = /android/i.test(navigator.userAgent.toLowerCase());\n\n  function l(e, t) {\n    this.element = a(e), this.settings = a.extend({}, n, t), this._defaults = n, this._name = s, this.init();\n  }\n\n  function t(e) {\n    e.element.trigger(\"change\");\n  }\n\n  function o(i) {\n    i.element.find(\"option\").each(function (e, t) {\n      var n = a(t);\n      void 0 === n.data(\"original-index\") && n.data(\"original-index\", i.elementCount++), void 0 === n.data(\"_selected\") && n.data(\"_selected\", !1);\n    });\n  }\n\n  function r(i, s, l) {\n    i.element.find(\"option\").each(function (e, t) {\n      var n = a(t);\n      n.data(\"original-index\") === s && (n.prop(\"selected\", l), l ? (n.attr(\"data-sortindex\", i.sortIndex), i.sortIndex++) : n.removeAttr(\"data-sortindex\"));\n    });\n  }\n\n  function c(e, n) {\n    return e.replace(/\\{(\\d+)\\}/g, function (e, t) {\n      return void 0 !== n[t] ? n[t] : e;\n    });\n  }\n\n  function h(e) {\n    if (e.settings.infoText) {\n      var t = e.elements.select1.find(\"option\").length,\n          n = e.elements.select2.find(\"option\").length,\n          i = e.element.find(\"option\").length - e.selectedElements,\n          s = e.selectedElements,\n          l = \"\";\n      l = 0 == i ? e.settings.infoTextEmpty : c(t === i ? e.settings.infoText : e.settings.infoTextFiltered, [t, i]), e.elements.info1.html(l), e.elements.box1.toggleClass(\"filtered\", !(t === i || 0 == i)), l = 0 === s ? e.settings.infoTextEmpty : c(n === s ? e.settings.infoText : e.settings.infoTextFiltered, [n, s]), e.elements.info2.html(l), e.elements.box2.toggleClass(\"filtered\", !(n === s || 0 === s));\n    }\n  }\n\n  function m(i) {\n    i.selectedElements = 0, i.elements.select1.empty(), i.elements.select2.empty(), i.element.find(\"option\").each(function (e, t) {\n      var n = a(t);\n      n.prop(\"selected\") ? (i.selectedElements++, i.elements.select2.append(n.clone(!0).prop(\"selected\", n.data(\"_selected\")))) : i.elements.select1.append(n.clone(!0).prop(\"selected\", n.data(\"_selected\")));\n    }), i.settings.showFilterInputs && (d(i, 1), d(i, 2)), h(i);\n  }\n\n  function d(s, l) {\n    if (s.settings.showFilterInputs) {\n      v(s, l), s.elements[\"select\" + l].empty().scrollTop(0);\n      var o = new RegExp(a.trim(s.elements[\"filterInput\" + l].val()), \"gi\"),\n          r = s.element.find(\"option\"),\n          e = s.element;\n      (e = 1 === l ? r.not(\":selected\") : e.find(\"option:selected\")).each(function (e, t) {\n        var n = a(t),\n            i = !0;\n        (t.text.match(o) || s.settings.filterOnValues && n.attr(\"value\").match(o)) && (i = !1, s.elements[\"select\" + l].append(n.clone(!0).prop(\"selected\", n.data(\"_selected\")))), r.eq(n.data(\"original-index\")).data(\"filtered\" + l, i);\n      }), h(s);\n    }\n  }\n\n  function v(e, t) {\n    var i = e.element.find(\"option\");\n    e.elements[\"select\" + t].find(\"option\").each(function (e, t) {\n      var n = a(t);\n      i.eq(n.data(\"original-index\")).data(\"_selected\", n.prop(\"selected\"));\n    });\n  }\n\n  function f(e) {\n    var t = e.children(\"option\");\n    t.sort(function (e, t) {\n      var n = parseInt(e.getAttribute(\"data-sortindex\")),\n          i = parseInt(t.getAttribute(\"data-sortindex\"));\n      return i < n ? 1 : n < i ? -1 : 0;\n    }), t.detach().appendTo(e);\n  }\n\n  function u(e, t) {\n    e.find(\"option\").sort(function (e, t) {\n      return a(e).data(\"original-index\") > a(t).data(\"original-index\") ? 1 : -1;\n    }).appendTo(e), m(t);\n  }\n\n  function p(i) {\n    \"all\" !== i.settings.preserveSelectionOnMove || i.settings.moveOnSelect ? \"moved\" !== i.settings.preserveSelectionOnMove || i.settings.moveOnSelect || v(i, 1) : (v(i, 1), v(i, 2)), i.elements.select1.find(\"option:selected\").each(function (e, t) {\n      var n = a(t);\n      n.data(\"filtered1\") || r(i, n.data(\"original-index\"), !0);\n    }), m(i), t(i), i.settings.sortByInputOrder ? f(i.elements.select2) : u(i.elements.select2, i);\n  }\n\n  function g(i) {\n    \"all\" !== i.settings.preserveSelectionOnMove || i.settings.moveOnSelect ? \"moved\" !== i.settings.preserveSelectionOnMove || i.settings.moveOnSelect || v(i, 2) : (v(i, 1), v(i, 2)), i.elements.select2.find(\"option:selected\").each(function (e, t) {\n      var n = a(t);\n      n.data(\"filtered2\") || r(i, n.data(\"original-index\"), !1);\n    }), m(i), t(i), u(i.elements.select1, i), i.settings.sortByInputOrder && f(i.elements.select2);\n  }\n\n  function b(n) {\n    n.elements.form.submit(function (e) {\n      n.elements.filterInput1.is(\":focus\") ? (e.preventDefault(), n.elements.filterInput1.focusout()) : n.elements.filterInput2.is(\":focus\") && (e.preventDefault(), n.elements.filterInput2.focusout());\n    }), n.element.on(\"bootstrapDualListbox.refresh\", function (e, t) {\n      n.refresh(t);\n    }), n.elements.filterClear1.on(\"click\", function () {\n      n.setNonSelectedFilter(\"\", !0);\n    }), n.elements.filterClear2.on(\"click\", function () {\n      n.setSelectedFilter(\"\", !0);\n    }), !1 === n.settings.eventMoveOverride && n.elements.moveButton.on(\"click\", function () {\n      p(n);\n    }), !1 === n.settings.eventMoveAllOverride && n.elements.moveAllButton.on(\"click\", function () {\n      var i;\n      \"all\" !== (i = n).settings.preserveSelectionOnMove || i.settings.moveOnSelect ? \"moved\" !== i.settings.preserveSelectionOnMove || i.settings.moveOnSelect || v(i, 1) : (v(i, 1), v(i, 2)), i.element.find(\"option\").each(function (e, t) {\n        var n = a(t);\n        n.data(\"filtered1\") || (n.prop(\"selected\", !0), n.attr(\"data-sortindex\", i.sortIndex), i.sortIndex++);\n      }), m(i), t(i);\n    }), !1 === n.settings.eventRemoveOverride && n.elements.removeButton.on(\"click\", function () {\n      g(n);\n    }), !1 === n.settings.eventRemoveAllOverride && n.elements.removeAllButton.on(\"click\", function () {\n      var e;\n      \"all\" !== (e = n).settings.preserveSelectionOnMove || e.settings.moveOnSelect ? \"moved\" !== e.settings.preserveSelectionOnMove || e.settings.moveOnSelect || v(e, 2) : (v(e, 1), v(e, 2)), e.element.find(\"option\").each(function (e, t) {\n        var n = a(t);\n        n.data(\"filtered2\") || (n.prop(\"selected\", !1), n.removeAttr(\"data-sortindex\"));\n      }), m(e), t(e);\n    }), n.elements.filterInput1.on(\"change keyup\", function () {\n      d(n, 1);\n    }), n.elements.filterInput2.on(\"change keyup\", function () {\n      d(n, 2);\n    });\n  }\n\n  l.prototype = {\n    init: function init() {\n      this.container = a('<div class=\"bootstrap-duallistbox-container\"> <div class=\"box1\">   <label></label>   <span class=\"info-container\">     <span class=\"info\"></span>     <button type=\"button\" class=\"btn clear1 pull-right\"></button>   </span>   <input class=\"filter\" type=\"text\">   <div class=\"btn-group buttons\">     <button type=\"button\" class=\"btn moveall\">       <i></i>       <i></i>     </button>     <button type=\"button\" class=\"btn move\">       <i></i>     </button>   </div>   <select multiple=\"multiple\"></select> </div> <div class=\"box2\">   <label></label>   <span class=\"info-container\">     <span class=\"info\"></span>     <button type=\"button\" class=\"btn clear2 pull-right\"></button>   </span>   <input class=\"filter\" type=\"text\">   <div class=\"btn-group buttons\">     <button type=\"button\" class=\"btn remove\">       <i></i>     </button>     <button type=\"button\" class=\"btn removeall\">       <i></i>       <i></i>     </button>   </div>   <select multiple=\"multiple\"></select> </div></div>').insertBefore(this.element), this.elements = {\n        originalSelect: this.element,\n        box1: a(\".box1\", this.container),\n        box2: a(\".box2\", this.container),\n        filterInput1: a(\".box1 .filter\", this.container),\n        filterInput2: a(\".box2 .filter\", this.container),\n        filterClear1: a(\".box1 .clear1\", this.container),\n        filterClear2: a(\".box2 .clear2\", this.container),\n        label1: a(\".box1 > label\", this.container),\n        label2: a(\".box2 > label\", this.container),\n        info1: a(\".box1 .info\", this.container),\n        info2: a(\".box2 .info\", this.container),\n        select1: a(\".box1 select\", this.container),\n        select2: a(\".box2 select\", this.container),\n        moveButton: a(\".box1 .move\", this.container),\n        removeButton: a(\".box2 .remove\", this.container),\n        moveAllButton: a(\".box1 .moveall\", this.container),\n        removeAllButton: a(\".box2 .removeall\", this.container),\n        form: a(a(\".box1 .filter\", this.container)[0].form)\n      }, this.originalSelectName = this.element.attr(\"name\") || \"\";\n      var e = \"bootstrap-duallistbox-nonselected-list_\" + this.originalSelectName,\n          t = \"bootstrap-duallistbox-selected-list_\" + this.originalSelectName;\n      return this.elements.select1.attr(\"id\", e), this.elements.select2.attr(\"id\", t), this.elements.label1.attr(\"for\", e), this.elements.label2.attr(\"for\", t), this.selectedElements = 0, this.sortIndex = 0, this.elementCount = 0, this.setBootstrap2Compatible(this.settings.bootstrap2Compatible), this.setFilterTextClear(this.settings.filterTextClear), this.setFilterPlaceHolder(this.settings.filterPlaceHolder), this.setMoveSelectedLabel(this.settings.moveSelectedLabel), this.setMoveAllLabel(this.settings.moveAllLabel), this.setRemoveSelectedLabel(this.settings.removeSelectedLabel), this.setRemoveAllLabel(this.settings.removeAllLabel), this.setMoveOnSelect(this.settings.moveOnSelect), this.setMoveOnDoubleClick(this.settings.moveOnDoubleClick), this.setPreserveSelectionOnMove(this.settings.preserveSelectionOnMove), this.setSelectedListLabel(this.settings.selectedListLabel), this.setNonSelectedListLabel(this.settings.nonSelectedListLabel), this.setHelperSelectNamePostfix(this.settings.helperSelectNamePostfix), this.setSelectOrMinimalHeight(this.settings.selectorMinimalHeight), o(this), this.setShowFilterInputs(this.settings.showFilterInputs), this.setNonSelectedFilter(this.settings.nonSelectedFilter), this.setSelectedFilter(this.settings.selectedFilter), this.setInfoText(this.settings.infoText), this.setInfoTextFiltered(this.settings.infoTextFiltered), this.setInfoTextEmpty(this.settings.infoTextEmpty), this.setFilterOnValues(this.settings.filterOnValues), this.setSortByInputOrder(this.settings.sortByInputOrder), this.setEventMoveOverride(this.settings.eventMoveOverride), this.setEventMoveAllOverride(this.settings.eventMoveAllOverride), this.setEventRemoveOverride(this.settings.eventRemoveOverride), this.setEventRemoveAllOverride(this.settings.eventRemoveAllOverride), this.element.hide(), b(this), m(this), this.element;\n    },\n    setBootstrap2Compatible: function setBootstrap2Compatible(e, t) {\n      return (this.settings.bootstrap2Compatible = e) ? (this.container.removeClass(\"row\").addClass(\"row-fluid bs2compatible\"), this.container.find(\".box1, .box2\").removeClass(\"col-md-6\").addClass(\"span6\"), this.container.find(\".clear1, .clear2\").removeClass(\"btn-default btn-xs\").addClass(\"btn-mini\"), this.container.find(\"input, select\").removeClass(\"form-control\"), this.container.find(\".btn\").removeClass(\"btn-default\"), this.container.find(\".moveall > i, .move > i\").removeClass(\"glyphicon glyphicon-arrow-right\").addClass(\"icon-arrow-right\"), this.container.find(\".removeall > i, .remove > i\").removeClass(\"glyphicon glyphicon-arrow-left\").addClass(\"icon-arrow-left\")) : (this.container.removeClass(\"row-fluid bs2compatible\").addClass(\"row\"), this.container.find(\".box1, .box2\").removeClass(\"span6\").addClass(\"col-md-6\"), this.container.find(\".clear1, .clear2\").removeClass(\"btn-mini\").addClass(\"btn-default btn-xs\"), this.container.find(\"input, select\").addClass(\"form-control\"), this.container.find(\".btn\").addClass(\"btn-default\"), this.container.find(\".moveall > i, .move > i\").removeClass(\"icon-arrow-right\").addClass(\"glyphicon glyphicon-arrow-right\"), this.container.find(\".removeall > i, .remove > i\").removeClass(\"icon-arrow-left\").addClass(\"glyphicon glyphicon-arrow-left\")), t && m(this), this.element;\n    },\n    setFilterTextClear: function setFilterTextClear(e, t) {\n      return this.settings.filterTextClear = e, this.elements.filterClear1.html(e), this.elements.filterClear2.html(e), t && m(this), this.element;\n    },\n    setFilterPlaceHolder: function setFilterPlaceHolder(e, t) {\n      return this.settings.filterPlaceHolder = e, this.elements.filterInput1.attr(\"placeholder\", e), this.elements.filterInput2.attr(\"placeholder\", e), t && m(this), this.element;\n    },\n    setMoveSelectedLabel: function setMoveSelectedLabel(e, t) {\n      return this.settings.moveSelectedLabel = e, this.elements.moveButton.attr(\"title\", e), t && m(this), this.element;\n    },\n    setMoveAllLabel: function setMoveAllLabel(e, t) {\n      return this.settings.moveAllLabel = e, this.elements.moveAllButton.attr(\"title\", e), t && m(this), this.element;\n    },\n    setRemoveSelectedLabel: function setRemoveSelectedLabel(e, t) {\n      return this.settings.removeSelectedLabel = e, this.elements.removeButton.attr(\"title\", e), t && m(this), this.element;\n    },\n    setRemoveAllLabel: function setRemoveAllLabel(e, t) {\n      return this.settings.removeAllLabel = e, this.elements.removeAllButton.attr(\"title\", e), t && m(this), this.element;\n    },\n    setMoveOnSelect: function setMoveOnSelect(e, t) {\n      if (i && (e = !0), this.settings.moveOnSelect = e, this.settings.moveOnSelect) {\n        this.container.addClass(\"moveonselect\");\n        var n = this;\n        this.elements.select1.on(\"change\", function () {\n          p(n);\n        }), this.elements.select2.on(\"change\", function () {\n          g(n);\n        });\n      } else this.container.removeClass(\"moveonselect\"), this.elements.select1.off(\"change\"), this.elements.select2.off(\"change\");\n\n      return t && m(this), this.element;\n    },\n    setMoveOnDoubleClick: function setMoveOnDoubleClick(e, t) {\n      if (i && (e = !1), this.settings.moveOnDoubleClick = e, this.settings.moveOnDoubleClick) {\n        this.container.addClass(\"moveondoubleclick\");\n        var n = this;\n        this.elements.select1.on(\"dblclick\", function () {\n          p(n);\n        }), this.elements.select2.on(\"dblclick\", function () {\n          g(n);\n        });\n      } else this.container.removeClass(\"moveondoubleclick\"), this.elements.select1.off(\"dblclick\"), this.elements.select2.off(\"dblclick\");\n\n      return t && m(this), this.element;\n    },\n    setPreserveSelectionOnMove: function setPreserveSelectionOnMove(e, t) {\n      return i && (e = !1), this.settings.preserveSelectionOnMove = e, t && m(this), this.element;\n    },\n    setSelectedListLabel: function setSelectedListLabel(e, t) {\n      return (this.settings.selectedListLabel = e) ? this.elements.label2.show().html(e) : this.elements.label2.hide().html(e), t && m(this), this.element;\n    },\n    setNonSelectedListLabel: function setNonSelectedListLabel(e, t) {\n      return (this.settings.nonSelectedListLabel = e) ? this.elements.label1.show().html(e) : this.elements.label1.hide().html(e), t && m(this), this.element;\n    },\n    setHelperSelectNamePostfix: function setHelperSelectNamePostfix(e, t) {\n      return (this.settings.helperSelectNamePostfix = e) ? (this.elements.select1.attr(\"name\", this.originalSelectName + e + \"1\"), this.elements.select2.attr(\"name\", this.originalSelectName + e + \"2\")) : (this.elements.select1.removeAttr(\"name\"), this.elements.select2.removeAttr(\"name\")), t && m(this), this.element;\n    },\n    setSelectOrMinimalHeight: function setSelectOrMinimalHeight(e, t) {\n      this.settings.selectorMinimalHeight = e;\n      var n = this.element.height();\n      return this.element.height() < e && (n = e), this.elements.select1.height(n), this.elements.select2.height(n), t && m(this), this.element;\n    },\n    setShowFilterInputs: function setShowFilterInputs(e, t) {\n      return e ? (this.elements.filterInput1.show(), this.elements.filterInput2.show()) : (this.setNonSelectedFilter(\"\"), this.setSelectedFilter(\"\"), m(this), this.elements.filterInput1.hide(), this.elements.filterInput2.hide()), this.settings.showFilterInputs = e, t && m(this), this.element;\n    },\n    setNonSelectedFilter: function setNonSelectedFilter(e, t) {\n      if (this.settings.showFilterInputs) return this.settings.nonSelectedFilter = e, this.elements.filterInput1.val(e), t && m(this), this.element;\n    },\n    setSelectedFilter: function setSelectedFilter(e, t) {\n      if (this.settings.showFilterInputs) return this.settings.selectedFilter = e, this.elements.filterInput2.val(e), t && m(this), this.element;\n    },\n    setInfoText: function setInfoText(e, t) {\n      return (this.settings.infoText = e) ? (this.elements.info1.show(), this.elements.info2.show()) : (this.elements.info1.hide(), this.elements.info2.hide()), t && m(this), this.element;\n    },\n    setInfoTextFiltered: function setInfoTextFiltered(e, t) {\n      return this.settings.infoTextFiltered = e, t && m(this), this.element;\n    },\n    setInfoTextEmpty: function setInfoTextEmpty(e, t) {\n      return this.settings.infoTextEmpty = e, t && m(this), this.element;\n    },\n    setFilterOnValues: function setFilterOnValues(e, t) {\n      return this.settings.filterOnValues = e, t && m(this), this.element;\n    },\n    setSortByInputOrder: function setSortByInputOrder(e, t) {\n      return this.settings.sortByInputOrder = e, t && m(this), this.element;\n    },\n    setEventMoveOverride: function setEventMoveOverride(e, t) {\n      return this.settings.eventMoveOverride = e, t && m(this), this.element;\n    },\n    setEventMoveAllOverride: function setEventMoveAllOverride(e, t) {\n      return this.settings.eventMoveAllOverride = e, t && m(this), this.element;\n    },\n    setEventRemoveOverride: function setEventRemoveOverride(e, t) {\n      return this.settings.eventRemoveOverride = e, t && m(this), this.element;\n    },\n    setEventRemoveAllOverride: function setEventRemoveAllOverride(e, t) {\n      return this.settings.eventRemoveAllOverride = e, t && m(this), this.element;\n    },\n    getContainer: function getContainer() {\n      return this.container;\n    },\n    refresh: function refresh(e) {\n      var t;\n      o(this), e ? (t = this).elements.select1.find(\"option\").each(function () {\n        t.element.find(\"option\").data(\"_selected\", !1);\n      }) : (v(this, 1), v(this, 2)), m(this);\n    },\n    destroy: function destroy() {\n      return this.container.remove(), this.element.show(), a.data(this, \"plugin_\" + s, null), this.element;\n    }\n  }, a.fn[s] = function (n) {\n    var t,\n        i = arguments;\n    return n === e || \"object\" == _typeof(n) ? this.each(function () {\n      a(this).is(\"select\") ? a.data(this, \"plugin_\" + s) || a.data(this, \"plugin_\" + s, new l(this, n)) : a(this).find(\"select\").each(function (e, t) {\n        a(t).bootstrapDualListbox(n);\n      });\n    }) : \"string\" == typeof n && \"_\" !== n[0] && \"init\" !== n ? (this.each(function () {\n      var e = a.data(this, \"plugin_\" + s);\n      e instanceof l && \"function\" == typeof e[n] && (t = e[n].apply(e, Array.prototype.slice.call(i, 1)));\n    }), t !== e ? t : this) : void 0;\n  };\n}(jQuery, (window, void document));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/jquery.bootstrap-duallistbox.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/jquery.bootstrap-duallistbox.min.js"]();
/******/ 	
/******/ })()
;